#!/usr/bin/python2

import argparse
import sys

from mcserver import TmuxPaneInterface, MinecraftServerManager

class BackupModeApplication(object):
    def __init__(self):
        self.arg_parser = argparse.ArgumentParser()
        self.config_argparse()

    def run(self, argv):
        args = self.arg_parser.parse_args(argv)
        tmux_interface = TmuxPaneInterface(args.tmux_session, args.tmux_pane,
            socket_path=args.tmux_socket_path)
        server_manager = MinecraftServerManager(tmux_interface,
            args.server_log)
        if self.state_to_bool(args.state):
            server_manager.save_off()
            server_manager.force_save()
        else:
            server_manager.save_on()

    @classmethod
    def state_to_bool(cls, state):
        s = state.lower()
        if s in ['true', 'on', 'yes', '1']:
            return True
        elif s in ['false', 'off', 'no', '0']:
            return False
        else:
            raise InvalidStateError('State must be a boolean')

    def config_argparse(self):
        p = self.arg_parser
        p.add_argument('-l', '--server-log', default='/srv/minecraft/server.log',
            help='Path to the Minecraft server log.'
        )
        p.add_argument('-s', '--tmux-session', default='0',
            help='Name of the tmux session containing the pane specified by -p.'
        )
        p.add_argument('-p', '--tmux-pane', default='0',
            help='Name or index of the tmux pane the server is running in.'
        )
        p.add_argument('-S', '--tmux-socket-path', default=None,
            help='Path to the socket tmux will connect to.'
        )
        p.add_argument('state',
            help='If true, puts the server in backup mode.  Backup mode '
            'disables saving and forces a full world save.  If false, backup '
            'mode is disabled (regular saving is resumed).'
        )
class InvalidStateError(Exception): pass

if __name__ == '__main__':
    BackupModeApplication().run(sys.argv[1:])
